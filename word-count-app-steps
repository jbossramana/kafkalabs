1.   create input topic with two partitions
./kafka-topics --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 2 --topic word-count-input

2.   create output topic
./kafka-topics --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 2 --topic word-count-output

3 launch a kafka producer
./kafka-console-producer --bootstrap-server localhost:9092 --topic word-count-input

4. launch a Kafka consumer
./kafka-console-consumer --bootstrap-server localhost:9092 \
    --topic word-count-output  \
    --from-beginning \
    --formatter kafka.tools.DefaultMessageFormatter \
    --property print.key=true \
    --property print.value=true \
    --property key.deserializer=org.apache.kafka.common.serialization.StringDeserializer \
    --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer
	
	
	(For Windows)
kafka-console-consumer.bat --bootstrap-server localhost:9092 ^
--topic word-count-output  ^
--from-beginning ^
--formatter kafka.tools.DefaultMessageFormatter ^
--property print.key=true ^
--property print.value=true ^
--property key.deserializer=org.apache.kafka.common.serialization.StringDeserializer ^
--property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer
	
5. Run the WordCountApp application

6. producer prompt
>Kafa Kafka Streams

Note: Observe the output in consumer prompt
kafka 2
streams 1
